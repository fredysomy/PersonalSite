[{"/workspace/PersonalSite/src/reportWebVitals.js":"1","/workspace/PersonalSite/src/components/Header.js":"2","/workspace/PersonalSite/src/components/Mainbody.js":"3","/workspace/PersonalSite/src/App.js":"4","/workspace/PersonalSite/src/index.js":"5","/workspace/PersonalSite/src/projects/Projects.js":"6"},{"size":362,"mtime":1609253642293,"results":"7","hashOfConfig":"8"},{"size":1551,"mtime":1609253642293,"results":"9","hashOfConfig":"8"},{"size":1547,"mtime":1609176091608,"results":"10","hashOfConfig":"8"},{"size":468,"mtime":1609177332355,"results":"11","hashOfConfig":"8"},{"size":512,"mtime":1607967834251,"results":"12","hashOfConfig":"8"},{"size":2370,"mtime":1609253867601,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tscryd",{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/workspace/PersonalSite/src/reportWebVitals.js",[],"/workspace/PersonalSite/src/components/Header.js",["26","27","28","29","30","31"],"/workspace/PersonalSite/src/components/Mainbody.js",["32"],"/workspace/PersonalSite/src/App.js",["33"],"/workspace/PersonalSite/src/index.js",[],"/workspace/PersonalSite/src/projects/Projects.js",["34","35","36"],{"ruleId":"37","severity":1,"message":"38","line":4,"column":13,"nodeType":"39","messageId":"40","endLine":4,"endColumn":14},{"ruleId":"41","severity":1,"message":"42","line":11,"column":3,"nodeType":"43","endLine":11,"endColumn":46},{"ruleId":"41","severity":1,"message":"44","line":20,"column":9,"nodeType":"43","endLine":20,"endColumn":88},{"ruleId":"41","severity":1,"message":"44","line":25,"column":9,"nodeType":"43","endLine":25,"endColumn":88},{"ruleId":"41","severity":1,"message":"42","line":29,"column":9,"nodeType":"43","endLine":29,"endColumn":96},{"ruleId":"41","severity":1,"message":"42","line":32,"column":9,"nodeType":"43","endLine":32,"endColumn":97},{"ruleId":"45","severity":1,"message":"46","line":8,"column":9,"nodeType":"43","endLine":8,"endColumn":135},{"ruleId":null,"fatal":true,"severity":2,"message":"47","line":10,"column":12},{"ruleId":"37","severity":1,"message":"48","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":13},{"ruleId":"45","severity":1,"message":"46","line":11,"column":17,"nodeType":"43","endLine":11,"endColumn":126},{"ruleId":"45","severity":1,"message":"46","line":30,"column":17,"nodeType":"43","endLine":30,"endColumn":164},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Parsing error: Unexpected token, expected \";\"\n\n   8 | import { Component } from 'react';\n   9 | function App() {\n> 10 |   render() {\n     |            ^\n  11 |       if(window.location.host.split(\".\")[0]===\"3000-ab293df2-28dc-4129-98a4-f5dd72299167\") {\n  12 |       return (\n  13 |           <div>","'react' is defined but never used."]